###################################################################################
###################################################################################

# number of simulations to run
Nsims: 2000 

# number of sims to run in parallel
num_parallel: 20 

###################################################################################
###################################################################################

# nside resolution parameter for generated maps
nside: 128 

# ellmax for power spectra
ellmax: 250 

# number of ell-space bins
Nbins: 10 

# noise level in uK arcmin for each frequency channel
noise: [2500., 2500., 2500.] 

# frequencies for maps, in GHz
freqs: [90., 150., 220.]

# components in the sky model (not including instrumental noise)
# e.g. comps: ['cmb', 'tsz']
comps: ['cmb', 'tsz']

# amplification factor for each component map
# e.g. if the second component is tsz and the second element of amp_factors is 150.,
# the fiducial tsz map will be multiplied by a factor of 150.
amp_factors: [1., 150.]

# List of paths to files or directories containing maps of each component in
# comps list (in the same order). For each component, if the corresponding
# path is a file, the code will use that file to generate several Gaussian 
# realizations with the same power spectrum. If the corresponding path is a 
# directory, the code will search for files in that directory of the form 
# {comp}_00000.fits, {comp}_00001.fits, etc. In this example, the first path should 
# correspond to the first component in comps (cmb). Since it's a file, 
# the code will generate several Gaussian realizations of the power spectrum in the file.
# The second path should correspond to the second component in comps (tsz).
# Since the path provided is a directory, the code will look for 
# tsz_00000.fits, tsz_00001.fits, etc. CMB maps are assumed to be in units of K_CMB.
# All other maps are assumed to have the assumed frequency dependence factored out
# (e.g. tSZ maps should be in dimensionless Compton-y units).
paths_to_comps: [
  '/scratch/09334/ksurrao/NILC/inputs/cmb_lensed_nside1024_K.fits',
  '/scratch/09334/ksurrao/NILC/inputs/halosky_maps'
]

###################################################################################
###################################################################################

# bin width for harmonic ILC frequency-frequency covariance matrix computation, 
# set to 0 for no binning
delta_l: 10 

# Set to True to omit central ell in bin when computing empirical covariance matrix
# for producing harmonic ILC maps (mitigates ILC bias) 
# Set to False to keep central ell in bin
omit_central_ell: True 

# Set to True to compute weights once from "data" and apply to every realization, 
# set to False to compute weights separately for each realization (and include parameter dependence in the weights)
compute_weights_once: False

# Set to True to use likelihood-free inference (recommended)
# If set to False, will use analytic Gaussian likelihood, which is only accurate if 
# use_Gaussian_tSZ is True
use_lfi: False

# Whether or not to use symbolic regression to estimate parameter dependence.
# If provided, this input is ignored if use_lfi is True.
# Note that if compute_weights_once is False, use_symbolic_regression must be set to True.
# If compute_weights_once is True, use_symbolic_regression can optionally be set to False
# to use analytic parameter dependence, which is faster.
use_symbolic_regression: True

# number of simulations to average over for fitting overall 
# parameter dependence f(Acmb, Aftsz)
# If provided, this input is ignored if use_lfi is True.
# If use_symbolic_regression is True, this number must be provided with 0 <= Nsims_for_fits <= Nsims
# If use_symbolic_regression is False, this input is not necessary and will be ignored if provided.
Nsims_for_fits: 50 

# scaling factors for components to fit parameter dependence (given in a list)
# If provided, this input is ignored if use_lfi is True.
# If use_symbolic_regression is True, there must be at least one scaling_factor given that is not equal to 1.
# If use_symbolic_regression is False, this input is not necessary and will be ignored if provided.
scaling_factors: [0.9, 0.99, 1.01, 1.1] 

###################################################################################
###################################################################################

# set to True for printing in debug mode (recommended to set to False for long runs)
verbose: False 

# Set to True to save pickle files
save_files: True 

# Path to folder to store outputs
# n.b. see note in README about setting this variable
output_dir: '/scratch/09334/ksurrao/NILC/outputs' 

###################################################################################
###################################################################################
